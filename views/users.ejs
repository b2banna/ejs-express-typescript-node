<h1>
  <%= title %>
</h1>
<div class="table-responsive">
  <table id="table" class="table table-sm table-striped table-bordered table-hover">
    <thead class="thead-dark">
      <tr>
        <th scope="col" data-field="rowId">Id</th>
        <th scope="col" data-field="id" class="d-none"></th>
        <th scope="col" data-field="firstName">First Name</th>
        <th scope="col" data-field="lastName">Last Name</th>
        <th scope="col" data-field="email">Email</th>
      </tr>
    </thead>
    <tbody id="tbody">
    </tbody>
  </table>
</div>

<!-- Drawer -->
<div id="drawer" class="drawer h-100 w-25">
  <div class="card h-100">
    <div class="card-body">
      <h5 class="card-title">
        User Details
        <button id="drawer-close" type="button" class="close" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </h5>
      <input id="id" type="hidden" />
      <div class="form-group">
        <label for="firstName" class="col-form-label">First Name</label>
        <input id="firstName" type="text" class="form-control form-control-sm" required>
      </div>
      <div class="form-group">
        <label for="lastName" class="col-form-label">Last Name</label>
        <input id="lastName" type="text" class="form-control form-control-sm" required>
      </div>
      <div class="form-group">
        <label for="email" class="col-form-label">Email</label>
        <input id="email" type="email" class="form-control form-control-sm" required>
      </div>
      <div class="form-group row">
        <div class="col-sm-6">
          <button id="drawer-cancel" type="submit" class="btn btn-sm btn-secondary btn-block">Cancel</button>
        </div>
        <div class="col-sm-6">
          <button id="drawer-save" type="submit" class="btn btn-sm btn-primary btn-block">Save</button>
        </div>
      </div>
    </div>
  </div>
</div>

<style>
  .drawer {
    top: 0;
    right: 0;
    position: fixed;
    display: none;
    overflow: auto;
    z-index: 2000;
    box-shadow: rgba(50, 50, 93, 0.25) 0px 13px 27px -5px, rgba(0, 0, 0, 0.3) 0px 8px 16px -8px;
  }
</style>

<script>

  const emptyTBody = () => {
    // Empty the table body
    $('#tbody').empty();
  };

  const appendRowInTBody = (row) => {
    // Append a row to the table body
    $('#tbody').append(row);
  };

  const createRowForTBody = (index, user) => {
    // Create a row for the table body
    return `<tr>
              <td >${index + 1}</td>
              <td class="d-none">${user._id}</td>
              <td >${user.firstName}</td>
              <td >${user.lastName}</td>
              <td >${user.email}</td>
            </tr>`;
  };

  const createEmptyRowForTBody = () => {
    // Create a empty row for the table body
    return `<tr>
              <td colspan="5">No data found</td>
            </tr>`;
  };

  const checkDataIsNotNullAndEmpty = (data) => {
    // Check if data is not null and empty
    if (data !== null && data !== undefined && data.length > 0) {
      return true;
    }
    return false;
  };

  const getUsers = () => {
    // Get users from the server and append them to the table body
    $.ajax({
      url: '/api/users',
      type: 'GET',
      success: function (users) {
        emptyTBody();
        if (checkDataIsNotNullAndEmpty(users)) {
          $.each(users, function (index, user) {
            appendRowInTBody(createRowForTBody(index, user));
          });
        } else {
          appendRowInTBody(createEmptyRowForTBody());
        }
      },
      error: function (error) {
        console.log(error);
      }
    });
  }

  const showDrawer = (user) => {
    $('#id').val(user.id);
    $('#firstName').val(user.firstName);
    $('#lastName').val(user.lastName);
    $('#email').val(user.email);
    $('#drawer').animate({ width: 'toggle' });
  };

  const hideDrawer = () => {
    $('#id').val('');
    $('#firstName').val('');
    $('#lastName').val('');
    $('#email').val('');
    $('#drawer').animate({ width: 'toggle' });
  };

  const updateUserById = (id, user) => {
    $.ajax({
      url: `/api/users/${id}`,
      type: 'PUT',
      data: user,
      success: function (data) {
        getUsers();
      },
      error: function (error) {
        console.log(error);
      }
    });
  };

  const isDrawerOpen = () => {
    return $('#drawer').is(':visible');
  };

  const clearDrawer = () => {
    $('#id').val('');
    $('#firstName').val('');
    $('#lastName').val('');
    $('#email').val('');
  };

  jQuery(document).ready(function ($) {

    // Get all Users and populate the table
    getUsers();

    // Add on click event to table rows and show data in modal
    $('#tbody').on('click', 'tr', function () {
      if (!isDrawerOpen()) {
        clearDrawer();
        const row = $(this).children('td:first');
        const id = row.next().text();
        const firstName = row.next().next().text();
        const lastName = row.next().next().next().text();
        const email = row.next().next().next().next().text();
        showDrawer({ id, firstName, lastName, email });
      }
    });

    // Add on click event to save button in modal
    $("#drawer-save").click(function () {
      const id = $('#id').val();
      const firstName = $('#firstName').val();
      const lastName = $('#lastName').val();
      const email = $('#email').val();
      updateUserById(id, { firstName, lastName, email });
      clearDrawer();
      hideDrawer();
    });

    // close drawer on click of close button
    $('#drawer-close').click(function () {
      clearDrawer();
      hideDrawer();
    });

    // close drawer on click of close button
    $('#drawer-cancel').click(function () {
      clearDrawer();
      hideDrawer();
    });
  });

</script>
